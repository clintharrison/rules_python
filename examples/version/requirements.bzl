# AUTOGENERATED FILE. DO NOT MODIFY.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")
load("@rules_python//python:whl.bzl", "whl_library")

def pip_install():
    _existing_rules = native.existing_rules()

    if "whl__pip_9_0_3__py2_py3_any" not in _existing_rules:
        http_file(
            name = "whl__pip_9_0_3__py2_py3_any",
            urls = ["https://files.pythonhosted.org/packages/ac/95/a05b56bb975efa78d3557efa36acaf9cf5d2fd0ee0062060493687432e03/pip-9.0.3-py2.py3-none-any.whl#sha256=c3ede34530e0e0b2381e7363aded78e0c33291654937e7373032fda04e8803e5"],
            sha256 = "c3ede34530e0e0b2381e7363aded78e0c33291654937e7373032fda04e8803e5",
            downloaded_file_path = "pip-9.0.3-py2.py3-none-any.whl",
        )

    if "pypi__pip_9_0_3__py36_any" not in _existing_rules:
        whl_library(
            name = "pypi__pip_9_0_3__py36_any",
            whl = "@whl__pip_9_0_3__py2_py3_any//file:pip-9.0.3-py2.py3-none-any.whl",
            requirements = "@rules_python//examples/version:requirements.bzl",
            extras = [],
            python_interpreter = "python3.6",
        )

_requirements = {
    "pip": ["@pypi__pip_9_0_3__py36_any//:pkg"],
}

def requirement(name):
    fail("requirement() has been renamed requirements(). It now takes and returns a list instead of a string.")

def requirements(names):
    if type(names) != "list":
        fail("requirements() now takes a list and returns a list")

    deps = []
    for name in names:
        name_key = name.replace("-", "_").lower()
        if name_key not in _requirements:
            fail("Could not find pip-provided dependency: '%s'" % name)
        deps += _requirements[name_key]
    return deps
